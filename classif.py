# -*- coding: utf-8 -*-
"""neurohackathor_klasyfikator.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1kIIJfZzcvMcaPmRzZR7mi8jjgRg3OgHK
"""

import numpy as np
from sklearn.pipeline import make_pipeline
from sklearn.preprocessing import StandardScaler
from sklearn.svm import SVC
import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.metrics import accuracy_score
from sklearn.feature_selection import SelectKBest, chi2
from sklearn.preprocessing import MinMaxScaler
import time
from interf import Menu

df1 = pd.read_csv('output_data/output1.csv', header=0)
df2 = pd.read_csv('output_data/output2.csv', header=0)
df3 = pd.read_csv('output_data/output3.csv', header=0)
df = pd.concat([df1, df2, df3], axis=0)
df = df.reset_index(drop=True)

df = df.drop(df[df['trigger'] == 'happiness'].index.tolist()[:800]).reset_index(drop=True)

y = df['trigger']
X = df.drop(columns='trigger')

X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

clf = make_pipeline(StandardScaler(), SVC(gamma='auto'))
clf.fit(X_train, y_train)

App = Menu()
App.run()

time.sleep(3)

last_predicted = None

for i in range(X_test.shape[0]):
  predicted = clf.predict([X_test.iloc[i]])
  if predicted != last_predicted:
    print("Found emotion:", predicted[0])
    is_good, correct = App.gen_emotion(predicted[0])
    if not is_good:
      print("Correct reaction:", correct)
    last_predicted = predicted